From: David Reveman <davidr@novell.com>
Date: Tue, 3 Oct 2006 20:17:29 +0000 (-0400)
Subject: Add snap_inverted option to wobbly plugin.
X-Git-Url: http://gitweb.freedesktop.org/?p=xorg/app/compiz.git;a=commitdiff;h=3a90623a209e4b187ffb7387e650a233ef71c071

Add snap_inverted option to wobbly plugin.
---

--- a/plugins/compiz.schemas.in
+++ b/plugins/compiz.schemas.in
@@ -24846,6 +24846,18 @@
         </schema>
 
         <schema>
+            <key>/schemas/apps/compiz/plugins/wobbly/allscreens/options/snap_inverted</key>
+            <applyto>/apps/compiz/plugins/wobbly/allscreens/options/snap_inverted</applyto>
+            <owner>compiz</owner>
+            <type>bool</type>
+            <default>false</default>
+            <locale name="C">
+                <short>Snap Inverted</short>
+                <long>Inverted window snapping</long>
+            </locale>
+        </schema>
+
+        <schema>
             <key>/schemas/apps/compiz/plugins/wobbly/screen0/options/friction</key>
             <applyto>/apps/compiz/plugins/wobbly/screen0/options/friction</applyto>
             <owner>compiz</owner>
--- a/plugins/wobbly.c
+++ b/plugins/wobbly.c
@@ -171,13 +171,16 @@ static char *moveWinType[] = {
 
 #define WOBBLY_SNAP_MODIFIERS_DEFAULT ShiftMask
 
+#define WOBBLY_SNAP_INVERTED_DEFAULT FALSE
+
 #define WOBBLY_MAXIMIZE_EFFECT_DEFAULT TRUE
 
 static int displayPrivateIndex;
 
-#define WOBBLY_DISPLAY_OPTION_SNAP   0
-#define WOBBLY_DISPLAY_OPTION_SHIVER 1
-#define WOBBLY_DISPLAY_OPTION_NUM    2
+#define WOBBLY_DISPLAY_OPTION_SNAP          0
+#define WOBBLY_DISPLAY_OPTION_SNAP_INVERTED 1
+#define WOBBLY_DISPLAY_OPTION_SHIVER        2
+#define WOBBLY_DISPLAY_OPTION_NUM           3
 
 typedef struct _WobblyDisplay {
     int		    screenPrivateIndex;
@@ -2333,17 +2336,29 @@ wobblyHandleEvent (CompDisplay *d,
 	    {
 		XkbStateNotifyEvent *stateEvent = (XkbStateNotifyEvent *) event;
 		CompAction	    *action;
+		Bool		    inverted;
 		unsigned int	    mods = 0xffffffff;
 
-		action = &wd->opt[WOBBLY_DISPLAY_OPTION_SNAP].value.action;
+		action   = &wd->opt[WOBBLY_DISPLAY_OPTION_SNAP].value.action;
+		inverted = wd->opt[WOBBLY_DISPLAY_OPTION_SNAP_INVERTED].value.b;
 
 		if (action->type & CompBindingTypeKey)
 		    mods = action->key.modifiers;
 
 		if ((stateEvent->mods & mods) == mods)
-		    wobblyEnableSnapping (d, NULL, 0, NULL, 0);
+		{
+		    if (inverted)
+			wobblyDisableSnapping (d, NULL, 0, NULL, 0);
+		    else
+			wobblyEnableSnapping (d, NULL, 0, NULL, 0);
+		}
 		else
-		    wobblyDisableSnapping (d, NULL, 0, NULL, 0);
+		{
+		    if (inverted)
+			wobblyEnableSnapping (d, NULL, 0, NULL, 0);
+		    else
+			wobblyDisableSnapping (d, NULL, 0, NULL, 0);
+		}
 	    }
 	}
 	break;
@@ -2851,10 +2866,13 @@ wobblySetDisplayOption (CompDisplay     
 	if (compSetActionOption (o, value))
 	    return TRUE;
 	break;
+    case WOBBLY_DISPLAY_OPTION_SNAP_INVERTED:
+	if (compSetBoolOption (o, value))
+	    return TRUE;
+	break;
     case WOBBLY_DISPLAY_OPTION_SHIVER:
 	if (setDisplayAction (display, o, value))
 	    return TRUE;
-	break;
     default:
 	break;
     }
@@ -2881,6 +2899,13 @@ wobblyDisplayInitOptions (WobblyDisplay 
     o->value.action.key.modifiers = WOBBLY_SNAP_MODIFIERS_DEFAULT;
     o->value.action.key.keycode   = 0;
 
+    o = &wd->opt[WOBBLY_DISPLAY_OPTION_SNAP_INVERTED];
+    o->name	 = "snap_inverted";
+    o->shortDesc = N_("Snap Inverted");
+    o->longDesc	 = N_("Inverted window snapping");
+    o->type	 = CompOptionTypeBool;
+    o->value.b	 = WOBBLY_SNAP_INVERTED_DEFAULT;
+
     o = &wd->opt[WOBBLY_DISPLAY_OPTION_SHIVER];
     o->name		      = "shiver";
     o->shortDesc	      = N_("Shiver");
