#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
LDFLAGS:=$(shell dpkg-buildflags --get LDFLAGS)
LDFLAGS += -Wl,--as-needed

CORE_ABIVERSION := $(shell sed -rn 's/^\#define[[:space:]]+CORE_ABIVERSION[[:space:]]+//p' include/core/abiversion.h )
DEFAULT_PLUGINS = "core composite opengl decor mousepoll snap compiztoolbox resize gnomecompat wall grid regex vpswitch place move session animation expo workarounds ezoom staticswitcher fade scale"

override_dh_auto_configure:
	# currently, segfault if CMAKE_BUILD_TYPE=Release
	dh_auto_configure -- \
			-DCOMPIZ_BUILD_WITH_RPATH=FALSE \
			-DCOMPIZ_DEFAULT_PLUGINS=\"$(DEFAULT_PLUGINS)\" \
			-DCMAKE_BUILD_TYPE=RelWithDebInfo \
			-DCOMPIZ_PACKAGING_ENABLED=TRUE \
			-Dlibdir=/usr/lib/$(DEB_HOST_MULTIARCH) \
			-DUSE_GSETTINGS=ON \
			-DUSE_GCONF=ON \
			-DBUILD_XORG_GTEST=OFF

override_dh_clean:
	$(RM) -r compizconfig/ccsm/build
	dh_clean

override_dh_gencontrol:
	dh_gencontrol -- -Vcoreabiversion=$(CORE_ABIVERSION)

override_dh_install:
	# cmake findcompiz_install use COMPIZ_DESTDIR and using COMPIZ_DESTDIR and
	# DESTDIR together is completely broken upstream
	# So, doing the same in debian/rules to find a way to install things in the
	# right place, sorry for the kittens
	cmake_dir=`cmake --system-information 2> /dev/null | grep "^CMAKE_ROOT " | sed -e 's/.*"\(.*\)"/\1/'` && \
	mkdir -p debian/tmp$${cmake_dir}/Modules && cp cmake/FindCompiz.cmake debian/tmp$${cmake_dir}/Modules

	# remove acceptance test binary
	$(RM) debian/tmp/usr/bin/compiz_autopilot_acceptance_tests

	dh_install --fail-missing

	# remove duplicate files
	$(RM) debian/compiz-dev/usr/share/compiz/cmake/LibCompizConfigCommon.cmake
	$(RM) debian/compiz-plugins/usr/share/compiz/kde.xml
	$(RM) debian/compiz-plugins/usr/lib/$(DEB_HOST_MULTIARCH)/compiz/libkde.so
	$(RM) debian/compiz-plugins/usr/share/compiz/core.xml

override_dh_installdocs:
	dh_installdocs -Nlibdecoration0 -Nlibdecoration0-dev --link-doc=libcompiz-core
	dh_installdocs --remaining-packages --link-doc=libdecoration0

%:
	dh $@ --parallel --with python2


# Based on http://wiki.debian.org/onlyjob/get-orig-source
# For a specific bzr revision like bzr3811 use:
# REV=3811 debian/rules get-orig-source

PKD   = $(abspath $(dir $(MAKEFILE_LIST)))
PKG   = $(word 2,$(shell dpkg-parsechangelog -l$(PKD)/changelog | grep ^Source))
UVER  = $(shell dpkg-parsechangelog -l$(PKD)/changelog | perl -ne 'print $$1 if m{^Version:\s+(?:\d+:)?(\d.*)(?:\-\d+.*)};')
DTYPE = +repack
VER  ?= $(subst $(DTYPE),,$(UVER))
UURL ?= lp:compiz/0.9.12
REV  ?= tag:$(VER)

get-orig-source:
	@echo "# Downloading..."
	$(if $(wildcard $(PKG)-$(VER)),$(error $(PKG)-$(VER) exist, aborting..))
	bzr export --per-file-timestamps -r $(REV) $(PKG)-$(VER) $(UURL) \
	|| $(RM) -r $(PKG)-$(VER)
	@echo "# Cleaning-up..."
	cd $(PKG)-$(VER) \
	&& $(RM) -r .gitignore debian
	@echo "# Packing..."
	find -L "$(PKG)-$(VER)" -xdev -type f -print | LC_ALL=C sort \
	| XZ_OPT="-6v" tar -caf "$(PKG)_$(VER)$(DTYPE).orig.tar.xz" -T- --owner=root --group=root --mode=a+rX \
	&& $(RM) -r "$(PKG)-$(VER)"

.PHONY: get-orig-source
